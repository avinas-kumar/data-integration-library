// Copyright 2021 LinkedIn Corporation. All rights reserved.
// Licensed under the BSD-2 Clause license.
// See LICENSE in the project root for license information.


def corePaths = ["gobblin-binary-management", "gobblin-compaction", "gobblin-core", "gobblin-data-management",
                 "gobblin-hive-registration", "gobblin-runtime", "gobblin-yarn", "gobblin-metrics-libs", "gobblin-runtime-hadoop"]
def servicePaths = ["gobblin-api", "gobblin-rest-service", "gobblin-restli", "gobblin-service"]
def modulePaths = ["gobblin-modules"]

task getGroupedTests {
    doLast {
        def taskNames = subprojects.findAll {
            subproject -> subproject.tasks.hasProperty('test')
        }
        def includedGroups
        switch(groupName) {
            case "Core Tests":
                includedGroups = taskNames.findAll {task ->
                    corePaths.any {
                        task.path.contains(it)
                    }
                }
                break;
            case "Service Tests":
                includedGroups = taskNames.findAll {task ->
                    servicePaths.any {
                        task.path.contains(it)
                    }
                }
                break;
            case "Module Tests":
                includedGroups = taskNames.findAll {task ->
                    modulePaths.any {
                        task.path.contains(it)
                    }
                }
                break;
            case "Other Tests":
                corePaths.addAll(servicePaths)
                corePaths.addAll(modulePaths)
                includedGroups = taskNames.findAll { task ->
                    !corePaths.any {
                        task.path.contains(it)
                    }
                }
                break;
            default:
                includedGroups = taskNames
                break;
        }

        def groupedTaskNames = includedGroups.collect { task -> task.tasks.findByName('test').getPath() }
        println "CI Task: " + groupedTaskNames.join(" ")
    }
}
