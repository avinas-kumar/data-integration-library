// Copyright 2021 LinkedIn Corporation. All rights reserved.
// Licensed under the BSD-2 Clause license.
// See LICENSE in the project root for license information.

if (!project.hasProperty('version') || project.version == 'unspecified') {
  try {
    exec {
      commandLine 'git', 'fetch', '-t', 'https://github.com/apache/incubator-gobblin.git', 'master'
    }
    def versionOut = new ByteArrayOutputStream()
    exec {
      commandLine 'git', 'describe', '--tags', '--always'
      standardOutput versionOut
    }
    def tagStr = versionOut.toString().trim()
    println 'Using latest tag for version: ' + tagStr
    if (tagStr.startsWith("gobblin_")) {
      project.version = tagStr.substring(8)
    }
    else {
      project.version = tagStr
    }
  }
  catch (Exception e) {
    logger.warn("Unable to determine version. Is this a git copy? Using 'unknown'.");
    project.version = 'unknown'
  }
}

if (!project.hasProperty('pegasusVersion')) {
  project.ext.pegasusVersion = '6.0.12'
}

if (project.hasProperty('jdkVersion')) {
  if (project.jdkVersion.equals(JavaVersion.VERSION_1_8.toString())) {
    ext.javaVersion = JavaVersion.VERSION_1_8
  } else {
    throw new RuntimeException("Unsupported JDK version: " + project.jdkVersion)
  }
}

// Hadoop validation
if (! hadoopVersion.startsWith('2.')) {
  throw new GradleScriptException("Only Hadoop 2.x is supported: " + hadoopVersion);
}

def gradleVersions = project.gradle.gradleVersion.tokenize(".")
ext.gradleVersionMajor = Integer.parseInt(gradleVersions[0])
ext.gradleVersionMinor = Integer.parseInt(gradleVersions[1])
println "Detected Gradle version major=" + gradleVersionMajor + " minor=" + gradleVersionMinor

ext.dropwizardMetricsVersion = '3.2.3'
ext.findBugsVersion = '3.0.0'
ext.googleVersion = '1.22.0'
ext.slf4jVersion = '1.7.21'
ext.log4jVersion = '1.2.17'
