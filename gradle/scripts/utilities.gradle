// Copyright 2021 LinkedIn Corporation. All rights reserved.
// Licensed under the BSD-2 Clause license.
// See LICENSE in the project root for license information.

def getAllDependentProjectsImpl(project) {
  def projectDependencies = project.configurations.runtime.getAllDependencies().withType(ProjectDependency)
  def dependentProjects = projectDependencies*.dependencyProject
  if (dependentProjects.size() > 0) {
    dependentProjects.each { dependentProjects += getAllDependentProjects(it) }
  }
  return dependentProjects.unique()
}

ext.getAllDependentProjects =  {getAllDependentProjectsImpl(it)}

task dotProjectDependencies(description: 'List of gobblin project dependencies in dot format') {
  doLast {
    println "// ========= Start of project dependency graph ======= "
    println "digraph project_dependencies {"
    subprojects.each { Project project ->
      def project_node_name = project.name.replaceAll("-", "_")
      if (project.configurations.findByName("compile") != null) {
        project.configurations.compile.dependencies.each { Dependency dep ->
          if (dep instanceof ProjectDependency) {
            def dep_node_name = dep.dependencyProject.name.replaceAll("-", "_")
            println "\t${project_node_name} -> ${dep_node_name};"
          }
        }
      }
    }
    println "}"
    println "// ========= End of project dependency graph ======= "
  }
}
